name: CI

on:
  push:
    branches:
      - master
env:
  NEW_FILENAME: "lambda_function.py"

jobs:
  job2:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: 只下载更新的文件
        uses: actions/checkout@v3

      - name: 配置AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37

      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

      - name: 所有改变的文件
        run: |
          echo "Actor: ${{ toJson(steps) }}"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file"
          done
          mkdir aaa

      - name: all_modified_files的文件
        run: |
            for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
                echo "$file" >> origin_all_modified_files.txt
                mv $file aaa/
                filename=$(basename "$file")
                echo "$filename" >> abs_all_modified_files.txt
                if [[ $filename == *.py ]]; then
                  filename_replace = filename.replace(".py", "")
                  echo "The file $filename is in .py format."
                  response=$(aws lambda get-function --function-name "$filename_replace" --output json)
                  echo "::set-output name=response::$response"
                else
                  echo "The file $filename is not in .py format."
                fi
            done
          
            cat origin_all_modified_files.txt
            echo "------"
            cat abs_all_modified_files.txt
            echo "------"
            ls -1 aaa

      - name: deleted_files的文件
        run: |
            for file in ${{ steps.changed-files.outputs.deleted_files }}; do
                echo "$file" >> origin_deleted_files.txt
                filename=$(basename "$file")
                echo "$filename" >> abs_deleted_files.txt
            done
            cat origin_deleted_files.txt
            echo "------"
            cat abs_deleted_files.txt

                 # rm aaa/$filename
